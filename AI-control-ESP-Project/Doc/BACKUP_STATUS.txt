===============================================================================
üéØ BACKUP STATUS - WERKENDE AUTO VACUUM VERSIE - 16 september 2025
===============================================================================

‚úÖ HUIDIGE STATUS: AUTO VACUUM WERKT PERFECT!
- Snelle response na unpause
- Snelle response na Z zuigen uitschakelen  
- Vacuum T-waarde opslag werkt (flash probleem opgelost)
- Zuig mode werkt correct
- ESP-NOW communicatie stabiel

===============================================================================
üîß KRITISCHE FIXES DIE TOEGEPAST ZIJN:
===============================================================================

1. FLASH STORAGE PROBLEEM OPGELOST:
   - Probleem: vacuumTargetMbar key was te lang (16 chars) ‚Üí flash vol
   - Oplossing: Korte key "vacTarget2" (10 chars) + alle kleur keys verkort
   - Locatie: settings.cpp - load/save functies
   - Status: ‚úÖ T-waarde wordt nu correct opgeslagen en geladen

2. AUTO VACUUM RESPONSE TIJD VERBETERD:
   a) Na unpause:
      - Probleem: velEMA had tijd nodig om op te bouwen
      - Oplossing: velEMA = 0.0f reset bij unpause
      - Locatie: ui.cpp regel 1002
      - Edge debouncing: 200ms ‚Üí 100ms
      
   b) Na Z zuigen uitschakelen:
      - Probleem: 3 seconden cooldown blokkeert auto vacuum
      - Oplossing: 3s ‚Üí 1s cooldown
      - Locatie: Pomp_unit_V1.0.ino regel 563

3. VISUELE ARROW SYNC:
   - Probleem: Visuele pijl en auto vacuum gebruikten andere logic
   - Oplossing: bool vacFilled = arrowFull (ui.cpp regel 1261)
   - Status: ‚úÖ Visuele pijl en auto vacuum nu gesynchroniseerd

===============================================================================
üìÅ AANGEPASTE BESTANDEN:
===============================================================================

HOOFT_ESP (HoofdESP):
- ui.cpp: 
  * velEMA reset bij unpause (regel 1002)
  * Auto vacuum logic restored from backup
  * Visuele arrow sync (regel 1261)
  * Edge debouncing 200ms‚Üí100ms (regel 1122)
- settings.cpp:
  * Flash keys verkort voor ruimte
  * "vacTarget2" key voor vacuum opslag
  * Uitgebreide debug voor flash diagnostics

POMP_UNIT_V1.0 (Pump Unit):
- Pomp_unit_V1.0.ino:
  * Auto vacuum logic fix (regel 658-680)
  * Zuig cooldown 3s‚Üí1s (regel 563)
  * Betere debug berichten voor troubleshooting

===============================================================================
üö® BELANGRIJKE LEARNINGS:
===============================================================================

1. STABIELE ONTWIKKELING:
   ‚ùå Vermijd: Te veel features tegelijk aanpassen
   ‚úÖ Gebruik: Werkende backup als referentie
   ‚úÖ Principe: E√©n probleem per keer oplossen

2. FLASH STORAGE:
   ‚ùå Probleem: Lange key namen vullen ESP32 flash namespace
   ‚úÖ Oplossing: Korte, beschrijvende keys (max 10 chars)
   ‚úÖ Check: esp_now_send() return codes voor write fails

3. AUTO VACUUM TIMING:
   ‚úÖ Critical path: HoofdESP velEMA ‚Üí ESP-NOW ‚Üí Pump Unit logic
   ‚úÖ Delays zitten in: velEMA buildup, cooldowns, edge debouncing
   ‚úÖ Debug: Gebruik Serial.printf met timestamps

4. ESP-NOW COMMUNICATIE:
   ‚úÖ Werkend: Onmiddellijke sends zonder retry delays
   ‚úÖ Key: sendImmediateArrowUpdate() bij arrow state changes
   ‚ùå Vermijd: Complexe retry logic (veroorzaakt delays)

===============================================================================
üéØ HUIDIGE CONFIGURATIE (BEHOUDEN!):
===============================================================================

AUTO VACUUM LOGIC (ui.cpp):
```cpp
if (!paused) {
  arrowFull = goingUp;  // Simple en betrouwbaar
  if (arrowFull != lastArrowFull && CFG.vacuumAutoMode && !pompUnitZuigActive) {
    sendImmediateArrowUpdate();  // Onmiddellijk naar Pump Unit
  }
}
```

PUMP UNIT AUTO VACUUM (Pomp_unit_V1.0.ino):
```cpp
if(arrow_full && millis() > zuigCooldownUntil) {
  // AUTO VACUUM CONTROL - 1 seconde na zuig stop
  if(!vacuum_pump_on && vac_avg > (set_cmHg + 0.5)) {
    vacuumSystemSet(true);  // Start vacuum
  }
}
```

FLASH STORAGE (settings.cpp):
```cpp
// Korte keys voor ruimte:
prefs.getFloat("vacTarget2", -30.0f);  // Was "vacuumTargetMbar"
prefs.putUShort("bg", CFG.COL_BG);     // Was "colBg"
```

===============================================================================
üöÄ VOLGENDE STAPPEN (OPTIONEEL):
===============================================================================

1. MONITORING:
   - Test langdurig gebruik voor stabiliteit
   - Monitor flash usage met uitgebreide debug

2. FINE-TUNING (alleen als nodig):
   - Vacuum threshold aanpassing (nu -0.02f)
   - Cooldown verder verkorten als stabiel (1s ‚Üí 0.5s?)

3. CODE CLEANUP (later):
   - Ongebruikte debug berichten verwijderen
   - Code comments updaten

===============================================================================
‚ö†Ô∏è  BACKUP INSTRUCTIES:
===============================================================================

BACKUP DEZE MAPPEN:
1. Hooft_ESP/ (alle bestanden)
2. Pomp_unit_V1.0/ (alle bestanden)

KRITIEKE BESTANDEN:
- ui.cpp (auto vacuum logic + velEMA reset)
- settings.cpp (flash storage keys)  
- Pomp_unit_V1.0.ino (pump logic + cooldown)

TEST NA RESTORE:
1. Auto vacuum reageert onmiddellijk na unpause
2. Auto vacuum start binnen 1s na Z zuigen stop
3. T-waarde blijft bewaard na ESP32 reset
4. Visuele pijl sync met auto vacuum

===============================================================================
üéâ SUCCES! DEZE VERSIE WERKT STABIEL!
===============================================================================